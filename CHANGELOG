0.7.0
  * New diagnostic counter: number of sent batches
  * Configurable minimum size of a batch to send to the collector, default is 1 span

0.6.1
  * Removed a forgotten debug print statement

0.6.0
  * Fixed context propagation, changed API a bit, please consult example-req for usage.

0.5.2:
  * Make `modifyCurrentSpan` and `currentSpanContext` functions safe to call not within a span

0.5.1:
  * Trace and span ids are now random instead of timestamps

0.5.0:
  * Introduce getEnvConfig
  * [Highlevel.IO] Auto-tag root spans with a thread id
  * Introduce LightStep.Diagnostics module that exposes some internal metrics that may be of interest when debugging or optimizing this library

0.4.5:
  * [Highlevel.IO] Fix a memory leak of several bytes per instrumented thread

0.4.4:
  * Always include x-b3-sampled=true in B3 context propagation headers

0.4.3:
  * Support B3 context propagation headers (only 64bit trace id)

0.4.2:
  * Make example executables not buildable by default. Use `cabal v2-build -f examples` or `stack build --flag lightstep-haskell:examples` to opt in

0.4.1:
  * Add `lightstep.tracer_version` to global tags

0.4.0:
  * Support GHC-8.8

0.3.0:
  * Introduce Network.Wai.Middleware.LightStep
  * Implement SpanContext (de)serialization into `ot-tracer-{trace,span}id` headers
  * Move examples under examples/ directory now that there is more than one

0.2.0:
  * Automatic reconnects

0.1.7:
  * Introduce timeouts to individual grpc requests

0.1.6:
  * Internal refactoring

0.1.5:
  * [Highlevel.IO] Fixed a deadlock in reporting when the backend is unavailable

0.1.4:
  * [Highlevel.IO] Fixed a deadlock in shutdown sequence

0.1.3:
  * [Highlevel.IO] withSpan now works in transformer stacks instead of only IO

0.1.2:
  * [Highlevel.IO] Automatically set error=true tag if exception is thrown from within withSpan

0.1.1:
  * Graceful shutdown

0.1.0:
  * Initial public release
